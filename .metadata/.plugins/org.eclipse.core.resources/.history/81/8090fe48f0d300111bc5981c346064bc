package com.example.liarpoker;

import android.app.Activity;
import android.content.res.Resources;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;

public class GameRoomActivity extends Activity 
{
	public static String currentPlayerHas = "";
	
	private int playerPosition = 0;
	
	private String waitString = "";
	
	@Override
    public void onCreate(Bundle savedInstanceState) 
	{
        super.onCreate(savedInstanceState);
        
        setContentView(R.layout.gameroom_main);
        
        String hand = Integer.toString((int)(Math.random()*100000));
        
        TextView handTextView = (TextView) findViewById(R.id.mynumbersLabel);
        handTextView.setText(hand);
        
        
        Resources res = getResources();
        waitString = res.getString(R.string.waiting);
        
        ResetCurrentPlayer();
        

        
        playerPosition = (int)((Math.random() * (WaitRoomActivity.playerlistArrayList.size()+1)) % WaitRoomActivity.playerlistArrayList.size());
        
        UpdateGameUI();
        
		EditText numberText = (EditText) findViewById(R.id.igotnumber);
		EditText amountText = (EditText) findViewById(R.id.igotamount);
		
		
		numberText.addTextChangedListener(new TextWatcher(){
			public void afterTextChanged(Editable s){updateSubmitButton();}
			public void beforeTextChanged(CharSequence s, int start, int count, int after){}
			public void onTextChanged(CharSequence s, int start, int before, int count){}
		});
		
		amountText.addTextChangedListener(new TextWatcher(){
			public void afterTextChanged(Editable s){updateSubmitButton();}
			public void beforeTextChanged(CharSequence s, int start, int count, int after){}
			public void onTextChanged(CharSequence s, int start, int before, int count){}
		});
        
	}
	
	public void fakeRandomCurrentPlayerHas(View view)
	{
		int randomNumber = (int)(Math.random()*10);
		int randomCount = (int)(Math.random()*10);
		
		currentPlayerHas = Integer.toString(randomCount) + " of " + Integer.toString(randomNumber) ;
		UpdateGameUI();
	}
	
	public void fakeNewCurrentPlayer(View view)
	{
		this.playerPosition = (this.playerPosition+1)%WaitRoomActivity.playerlistArrayList.size();
		ResetCurrentPlayer();
	}
	
	public void fakeNoOneCallsLiar(View view)
	{
		this.playerPosition = (this.playerPosition+1)%WaitRoomActivity.playerlistArrayList.size();
		ResetCurrentPlayer();
	}
	
	public void fakeSomeoneCallsLiar(View view)
	{
		// TODO: End game... If I am lying, i lose... if I was not lying... I win... and everyone else loses
		// Test: I'm not lying, but someone has higher amount of same #
	}
	
	public void fakeMyTurn(View view)
	{
		this.playerPosition = 0;
		ResetCurrentPlayer();
	}
	
	private void ResetCurrentPlayer()
	{
		// Need to handle if my turn or someone else's turn
        currentPlayerHas = waitString;
        UpdateGameUI();
	}
	
	public void updateSubmitButton()
	{
		EditText numberText = (EditText) findViewById(R.id.igotnumber);
		EditText amountText = (EditText) findViewById(R.id.igotamount); 		
		Button submitButton = (Button) findViewById(R.id.submitButton);
		
		Log.d("RAY", numberText.getText().toString());
		
		boolean enabled = checkEditText(numberText) && checkEditText(amountText);
		submitButton.setEnabled(enabled);

	}
	
	private boolean checkEditText(EditText edit)
	{
		return edit.getText().toString() != null;
	}
	
	public void submit(View view)
	{
	
	}
	
	private void UpdateGameUI()
	{
		
		//notMyTurnLayout
		
		String currentPlayerIs = WaitRoomActivity.playerlistArrayList.get(this.playerPosition);
		LinearLayout notMyTurnLayout = (LinearLayout) findViewById(R.id.notMyTurnLayout);
		LinearLayout myTurnLayout = (LinearLayout) findViewById(R.id.myTurnLayout);
		
		if(currentPlayerIs == WaitRoomActivity.myPlayerName)
		{
			notMyTurnLayout.setVisibility(View.GONE);
			myTurnLayout.setVisibility(View.VISIBLE);
			
			Button submitButton = (Button) findViewById(R.id.submitButton);
			submitButton.setEnabled(false);
			
			EditText numberText = (EditText) findViewById(R.id.igotnumber);
			EditText amountText = (EditText) findViewById(R.id.igotamount); 		
			
			numberText.setText("");
			amountText.setText("");
		}
		else
		{
			TextView currentPlayerTextView = (TextView) findViewById(R.id.currentPlayerLabel);
			TextView currentPlayerHasTextView = (TextView) findViewById(R.id.currentPlayerHasLabel);
	    	Button liarButton = (Button) findViewById(R.id.liarButton);
	    	Button notLiarButton = (Button) findViewById(R.id.notLiarButton);
	    	
	    	currentPlayerTextView.setText(currentPlayerIs);
	    	currentPlayerHasTextView.setText(currentPlayerHas);
	    	
			if(currentPlayerHas == waitString)
	        {
	        	// Disable Buttons     	
	        	liarButton.setEnabled(false);
	        	notLiarButton.setEnabled(false);
	        }
	        else
	        {	
	        	// Enable buttons
	        	liarButton.setEnabled(true);
	        	notLiarButton.setEnabled(true);
	        }
			
			notMyTurnLayout.setVisibility(View.VISIBLE);
			myTurnLayout.setVisibility(View.GONE);
		}
	}
}
