package com.example.liarpoker;

import java.util.Collections;
import java.util.Enumeration;
import java.util.Hashtable;

import android.app.Activity;
import android.content.Intent;
import android.graphics.Typeface;
import android.os.Bundle;
import android.util.Log;
import android.util.TypedValue;
import android.view.Gravity;
import android.view.View;
import android.widget.LinearLayout;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.TextView;

public class ResultActivity extends Activity {
	
    boolean iWin = true;
	private boolean lastPlayerWasLying;
    
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.result_main);
        
        String lastPlayer = GameService.currentPlayerIs;
        int lastNumber = GameService.submittedNumber;
        lastPlayerWasLying = GameService.wasLastPlayerLying();
        

        TextView lastPlayerView = (TextView) findViewById(R.id.lastplayer);
        lastPlayerView.setText(lastPlayer);
        
        TextView lastNumberView = (TextView) findViewById(R.id.lastNumberText);
        lastNumberView.setText(Integer.toString(lastNumber));
        
        TextView lastPlayerWasLyingView = (TextView) findViewById(R.id.lyingOrNot);
        LinearLayout lyingLayout = (LinearLayout) findViewById(R.id.lyingLayout);
        
        if(lastPlayerWasLying)
        {
        	lastPlayerWasLyingView.setText("LIAR!");
        	lyingLayout.setVisibility(View.VISIBLE);
        }
        else
        {
        	lastPlayerWasLyingView.setText("Saint");
        	lyingLayout.setVisibility(View.GONE);
        }
        
        // POSSIBLE BUG: playerTable might be null? Because stopservice at dispose of GameRoomActivity
        Hashtable<String, String> playerAmount = GameService.playerTable;
        
        TableLayout table = (TableLayout) findViewById(R.id.resultTable);
        table.setStretchAllColumns(true);
        TableRow header = new TableRow(this);
        
        
        int fontsize = 18;
        
        TextView headerPlayer = new TextView(this);
        headerPlayer.setTextSize(TypedValue.COMPLEX_UNIT_DIP, fontsize-2); 
        headerPlayer.setText("player");
        headerPlayer.setTypeface(Typeface.DEFAULT, Typeface.BOLD); 
        headerPlayer.setGravity(Gravity.CENTER_HORIZONTAL);  
        headerPlayer.setPadding(0, 0, 20, 0);
        header.addView(headerPlayer, 0);
        
        TextView headerHand = new TextView(this);
        headerHand.setTextSize(TypedValue.COMPLEX_UNIT_DIP, fontsize-2); 
        headerHand.setText("hand");
        headerHand.setTypeface(Typeface.DEFAULT, Typeface.BOLD); 
        headerHand.setGravity(Gravity.CENTER_HORIZONTAL);  
        header.addView(headerHand, 1);
        
        TextView headerCount = new TextView(this);
        headerCount.setTextSize(TypedValue.COMPLEX_UNIT_DIP, fontsize-2); 
        headerCount.setText("count");
        headerCount.setTypeface(Typeface.DEFAULT, Typeface.BOLD); 
        headerCount.setGravity(Gravity.CENTER_HORIZONTAL);  
        header.addView(headerCount, 2);
        
        table.addView(header);
        
     // Get Hashtable Enumeration to get key and value
        Enumeration em = playerAmount.keys();
		
        int max = 0;
        while(em.hasMoreElements())
        {
        	String player = em.nextElement().toString();
        	if(player == lastPlayer)
        		continue;
        	
        	String playerHand = playerAmount.get(player);
        	int amount = (Integer)GameService.getAmount(playerHand);
			TableRow row = new TableRow(this);
			
			TextView playerView = new TextView(this);
			playerView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, fontsize); 
			playerView.setText(player);
			playerView.setGravity(Gravity.CENTER_HORIZONTAL); 
			
			TextView handView = new TextView(this);
			handView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, fontsize); 
			handView.setText(playerHand);
			handView.setGravity(Gravity.CENTER_HORIZONTAL); 
	        
			TextView amountView = new TextView(this);
			amountView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, fontsize); 
			amountView.setText(Integer.toString(amount));
			amountView.setGravity(Gravity.CENTER_HORIZONTAL); 
			
			row.addView(playerView, 0);
			row.addView(handView, 0);
			row.addView(amountView,2);
			
			table.addView(row);
			Log.d("PLAYER", player);
			Log.d("AMOUNT", Integer.toString(amount));
        }
        

        
        		
        		
        		Collections.max(playerAmount.values());
        
        int myAmount = playerAmount.get(WaitRoomActivity.myPlayerName);
        Log.d("MAX", Integer.toString(max));
        if(myAmount < max)
        {
        	iWin = false;
        }
        
        DisplayWinner();
        
        
        
        
    }
    
    public void DisplayWinner()
    {
    	TextView winLoseText = (TextView) findViewById(R.id.winLoseText);
    	
    	if(GameService.currentPlayerIs == WaitRoomActivity.myPlayerName && !lastPlayerWasLying)
    	{
    		winLoseText.setText("YOU WIN!");
    	}
    	else if(lastPlayerWasLying && iWin)
    	{
    		winLoseText.setText("YOU WIN!");
    	}
    	else
    	{
    		winLoseText.setText("You Lose");
    	}
    }
    
    public void NewGameClick(View view)
    {
    	Intent intent = new Intent(this, WaitRoomActivity.class);
    	startActivity(intent);
    }
}
