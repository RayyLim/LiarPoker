package com.example.liarpoker;

import android.app.Activity;
import android.content.res.Resources;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;

public class GameRoomActivity extends Activity 
{
	public static String currentPlayerHas = "";
	
	private int playerPosition = 0;
	
	private String waitString = "";
	
	@Override
    public void onCreate(Bundle savedInstanceState) 
	{
        super.onCreate(savedInstanceState);
        
        setContentView(R.layout.gameroom_main);
        
        String hand = Integer.toString((int)(Math.random()*100000));
        
        TextView handTextView = (TextView) findViewById(R.id.mynumbersLabel);
        handTextView.setText(hand);
        
        
        Resources res = getResources();
        waitString = res.getString(R.string.waiting);
        
        ResetCurrentPlayer();
        

        
        playerPosition = (int)((Math.random() * (WaitRoomActivity.playerlistArrayList.size()+1)) % WaitRoomActivity.playerlistArrayList.size());
        
        UpdateGameUI();
        
	}
	
	public void fakeRandomCurrentPlayerHas(View view)
	{
		int randomNumber = (int)(Math.random()*10);
		int randomCount = (int)(Math.random()*10);
		
		int randomCurrentPlayerHas = randomNumber;
		
		while(randomCount > 1)
		{
			randomCurrentPlayerHas = randomCurrentPlayerHas * 10 + randomNumber;
			randomCount--;
		}
		
		currentPlayerHas = Integer.toString(randomCurrentPlayerHas);
		UpdateGameUI();
	}
	
	public void fakeNewCurrentPlayer(View view)
	{
		this.playerPosition = (this.playerPosition+1)%WaitRoomActivity.playerlistArrayList.size();
		ResetCurrentPlayer();
	}
	
	public void fakeNoOneCallsLiar(View view)
	{
		this.playerPosition = (this.playerPosition+1)%WaitRoomActivity.playerlistArrayList.size();
		ResetCurrentPlayer();
	}
	
	public void fakeSomeoneCallsLiar(View view)
	{
		// TODO: End game... If I am lying, i lose... if I was not lying... I win... and everyone else loses
		// Test: I'm not lying, but someone has higher amount of same #
	}
	
	private void ResetCurrentPlayer()
	{
		// Need to handle if my turn or someone else's turn
        currentPlayerHas = waitString;
        UpdateGameUI();
	}
	
	private void UpdateGameUI()
	{
		
		//notMyTurnLayout
		
		String currentPlayerIs = WaitRoomActivity.playerlistArrayList.get(this.playerPosition);
		
		if(currentPlayer == WaitRoomActivity.myPlayerName)
		{
			
		}
		else
		{
			LinearLayout notMyTurnLayout = (LinearLayout) findViewById(R.id.notMyTurnLayout);
			
			notMyTurnLayout.setVisibility(View.VISIBLE);
			// notMyTurnLayout.setVisibility(View.GONE);
		}
		
		TextView currentPlayerTextView = (TextView) findViewById(R.id.currentPlayerLabel);
		TextView currentPlayerHasTextView = (TextView) findViewById(R.id.currentPlayerHasLabel);
    	Button liarButton = (Button) findViewById(R.id.liarButton);
    	Button notLiarButton = (Button) findViewById(R.id.notLiarButton);
    	
    	currentPlayerTextView.setText(currentPlayerIs);
    	currentPlayerHasTextView.setText(currentPlayerHas);
    	
		if(currentPlayerHas == waitString)
        {
        	// Disable Buttons     	
        	liarButton.setEnabled(false);
        	notLiarButton.setEnabled(false);
        }
        else
        {	
        	// Enable buttons
        	liarButton.setEnabled(true);
        	notLiarButton.setEnabled(true);
        }
	}
}
